// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id        String @id @default(uuid())
//   userName  String @unique
//   email     String @unique
//   passwordHash String
//   avatar        String

//   friendListId  String?
//   friendList    FriendList? @relation(fields: [friendListId], references: [id])
//   blackListId   String?
//   blackList     BlackList? @relation(fields: [blackListId], references: [id])
// }

// model FriendList {
//   id    String @id @default(uuid())
//   users User[]
// }

// model BlackList {
//   id    String @id @default(uuid())
//   users User[]
// }

enum StatusType {
  ONLINE
  OFFLINE
  BUSY
  AWAY
  INVISIBLE
  TA_GRAND_MERE
}

model User {
  id            String @id @default(uuid())
  userName      String @unique
  email         String @unique
  passwordHash  String
  avatar        String

  friends       User[] @relation("friendList")
  friendTo      User[] @relation("friendList")

  blacklist     User[] @relation("blacklist")
  blacklistedBy User[] @relation("blacklist")

  createdAt     DateTime @default(now())
  status        StatusType @default(OFFLINE)
  matchHistory  PlayerGame[]
  playStats     PlayStats?
  channels      ChannelMember[]
  messages      Message[]
}

model Game {
  id        String  @id @default(uuid())
  playedAt  DateTime  @default(now())
  players   PlayerGame[]
}

model PlayerGame {
  player    User  @relation(fields: [playerId], references: [id])
  playerId  String
  game      Game  @relation(fields: [gameId], references: [id])
  gameId    String
  score     Int

  @@id([playerId, gameId])
}

model PlayStats {
  user              User  @relation(fields: [userId], references: [id])
  userId            String  @unique
  wins              Int
  losses            Int
  rank              Int
  points            Int
  achievement_point Int
}
// normalement ca ca marche


model Channel {
  id          String  @id @default(uuid())
  channelName String? @unique
  members     ChannelMember[]
  messages    Message[]
  mode        ChannelModeType
  createdAt   DateTime @default(now())
}

enum ChannelModeType {
  PUBLIC
  PRIVATE
  PROTECTED
  PRIVMSG
}

model ChannelMember {
  channel     Channel @relation(fields: [channelId], references: [id])
  channelId   String
  user        User @relation(fields: [userId], references: [id])
  userId      String
  role        RoleType
  timeJoined  DateTime @default(now())

  @@id([userId, channelId])
}

enum RoleType {
  OWNER
  ADMIN
  MEMBER
  MUTED
  BANNED
}

model Message {
  id        String @id @default(uuid())
  sender    User @relation(fields: [userId], references: [id])
  userId    String
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String
  content   String @db.VarChar(2000)
}