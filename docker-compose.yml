services:

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - transcendence_network

  backend:
    build: ./nest/
    image: nest
    container_name: nest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${BACK_PORT}:${BACK_PORT}
    volumes:
      - ./nest:/usr/src/app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PW}
      - DB_DB=${DB_NAME}
      - NETWORK_NAME=${NETWORK_NAME}
      - DB_PORT=${DB_PORT}
      - PROTOCOL=${PROTOCOL}
      - APP_HOST=${APP_HOST}
      - FRONT_PORT=${FRONT_PORT}
      - BACK_PORT=${BACK_PORT}
      - FORTYTWO_ID=${FORTYTWO_API_ID}
      - FORTYTWO_SECRET=${FORTYTWO_API_SECRET}
      - FORTYTWO_CALLBACK=${FORTYTWO_API_CALLBACK}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - transcendence_network


  frontend:
    build: ./react/
    image: react
    container_name: react
    restart: always
    environment:
      - FRONT_PORT=${FRONT_PORT}
      - BACK_PORT=${BACK_PORT}
    ports:
      - ${FRONT_PORT}:${FRONT_PORT}
    volumes:
      - ./react:/usr/src/app
    networks:
      - transcendence_network

networks:
  transcendence_network:
